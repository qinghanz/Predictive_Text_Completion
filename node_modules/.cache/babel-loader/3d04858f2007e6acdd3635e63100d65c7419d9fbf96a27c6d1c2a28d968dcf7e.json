{"ast":null,"code":"var _jsxFileName = \"/Users/loverice/Desktop/predictive_text_completion/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [predictedText, setPredictedText] = useState(\"\");\n  const [backendStatus, setBackendStatus] = useState(\"Connecting...\");\n  useEffect(() => {\n    // Check backend connection status\n    fetch(\"/predict\").then(() => setBackendStatus(\"Connected\")).catch(() => setBackendStatus(\"Disconnected\"));\n  }, []);\n  const handleInputChange = event => {\n    const newText = event.target.value;\n    setText(newText);\n\n    // Update predicted text without making a request to the backend\n    const predictedText = newText + \" world\";\n    setPredictedText(predictedText);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Predictive Text App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Backend Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), \" \", backendStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: text,\n      onChange: handleInputChange,\n      rows: \"5\",\n      cols: \"50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Predicted Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: predictedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"drpfCwGK9f2v/WfGBIxT3LGwh9s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","text","setText","predictedText","setPredictedText","backendStatus","setBackendStatus","fetch","then","catch","handleInputChange","event","newText","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","rows","cols","_c","$RefreshReg$"],"sources":["/Users/loverice/Desktop/predictive_text_completion/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [predictedText, setPredictedText] = useState(\"\");\n  const [backendStatus, setBackendStatus] = useState(\"Connecting...\");\n\n  useEffect(() => {\n    // Check backend connection status\n    fetch(\"/predict\")\n      .then(() => setBackendStatus(\"Connected\"))\n      .catch(() => setBackendStatus(\"Disconnected\"));\n  }, []);\n\n  const handleInputChange = (event) => {\n    const newText = event.target.value;\n    setText(newText);\n\n    // Update predicted text without making a request to the backend\n    const predictedText = newText + \" world\";\n    setPredictedText(predictedText);\n  };\n\n  return (\n    <div>\n      <h1>Predictive Text App</h1>\n      <div>\n        <strong>Backend Status:</strong> {backendStatus}\n      </div>\n      <textarea\n        value={text}\n        onChange={handleInputChange}\n        rows=\"5\"\n        cols=\"50\"\n      ></textarea>\n      <br />\n      <div>\n        <h2>Predicted Text:</h2>\n        <p>{predictedText}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,eAAe,CAAC;EAEnEC,SAAS,CAAC,MAAM;IACd;IACAW,KAAK,CAAC,UAAU,CAAC,CACdC,IAAI,CAAC,MAAMF,gBAAgB,CAAC,WAAW,CAAC,CAAC,CACzCG,KAAK,CAAC,MAAMH,gBAAgB,CAAC,cAAc,CAAC,CAAC;EAClD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAClCZ,OAAO,CAACU,OAAO,CAAC;;IAEhB;IACA,MAAMT,aAAa,GAAGS,OAAO,GAAG,QAAQ;IACxCR,gBAAgB,CAACD,aAAa,CAAC;EACjC,CAAC;EAED,oBACEL,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BrB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAQ;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACd,aAAa;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACNrB,OAAA;MACEgB,KAAK,EAAEb,IAAK;MACZmB,QAAQ,EAAEV,iBAAkB;MAC5BW,IAAI,EAAC,GAAG;MACRC,IAAI,EAAC;IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACZrB,OAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNrB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBrB,OAAA;QAAAiB,QAAA,EAAIZ;MAAa;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnB,EAAA,CAxCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}